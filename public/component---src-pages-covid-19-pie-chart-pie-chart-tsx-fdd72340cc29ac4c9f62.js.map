{"version":3,"sources":["webpack:///./src/pages/COVID19/PieChart/PieChart.tsx","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["PieChart","daily","useSelector","selectDaily","motality","length","Deaths","Confirmed","pieChart","data","labels","datasets","Recovered","backgroundColor","hoverBackgroundColor","borderColor","options","legend","position","boxWidth","align","color","gutterBottom","toFixed","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","classes","className","_props$color","component","_props$display","display","_props$gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","Component","root","concat","theme","margin","typography","caption","button","overline","srOnly","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name"],"mappings":"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","file":"component---src-pages-covid-19-pie-chart-pie-chart-tsx-fdd72340cc29ac4c9f62.js","sourcesContent":["import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectDaily } from \"../covidSlice\";\n\nconst PieChart: React.FC = () => {\n  const daily = useSelector(selectDaily);\n\n  const motality =\n    (100 * daily[daily.length - 1].Deaths) / daily[daily.length - 1].Confirmed;\n\n  const pieChart = daily[0] && (\n    <Doughnut\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            data: [\n              daily[daily.length - 1].Confirmed,\n              daily[daily.length - 1].Recovered,\n              daily[daily.length - 1].Deaths,\n            ],\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"#008080\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            hoverBackgroundColor: [\"#36A2EB\", \"#3cb371\", \"#FF6384\"],\n            borderColor: [\"transparent\", \"transparent\", \"transparent\"],\n          },\n        ],\n      }}\n      options={{\n        legend: {\n          position: \"bottom\",\n          labels: {\n            boxWidth: 15,\n          },\n        },\n      }}\n    />\n  );\n\n  return (\n    <>\n      <Typography align=\"center\" color=\"textSecondary\" gutterBottom>\n        Motarity {motality.toFixed(2)} [%]\n      </Typography>\n      {pieChart}\n    </>\n  );\n};\n\nexport default PieChart;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}